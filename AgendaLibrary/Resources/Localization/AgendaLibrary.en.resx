<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="agenda" xml:space="preserve">
    <value>agendas</value>
  </data>
  <data name="agenda_available" xml:space="preserve">
    <value>Agendas available</value>
  </data>
  <data name="agenda_database" xml:space="preserve">
    <value>Agendas on database</value>
  </data>
  <data name="agenda_prune" xml:space="preserve">
    <value>Agendas to be pruned</value>
  </data>
  <data name="bug_report_role" xml:space="preserve">
    <value>Report a bug</value>
  </data>
  <data name="command_entered" xml:space="preserve">
    <value>Command you entered</value>
  </data>
  <data name="content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="create_log" xml:space="preserve">
    <value>Creating log file.....</value>
  </data>
  <data name="create_log_finish" xml:space="preserve">
    <value>Logging file created.</value>
  </data>
  <data name="credits_role" xml:space="preserve">
    <value>View credits</value>
  </data>
  <data name="current_date_time" xml:space="preserve">
    <value>Current date and time</value>
  </data>
  <data name="deadline" xml:space="preserve">
    <value>Deadline</value>
  </data>
  <data name="debug_warning" xml:space="preserve">
    <value>THIS IS A DEBUG BUILD, PERFORMANCE WILL BE REDUCED, USE WITH CAUTION.</value>
  </data>
  <data name="early_date_error" xml:space="preserve">
    <value>Date cannot be earlier than or equal to today.</value>
  </data>
  <data name="empty_content_error" xml:space="preserve">
    <value>Content cannot be empty.</value>
  </data>
  <data name="empty_date_error" xml:space="preserve">
    <value>Date cannot be empty.</value>
  </data>
  <data name="empty_role_warning" xml:space="preserve">
    <value>Role input cannot be empty.</value>
  </data>
  <data name="empty_subject_error" xml:space="preserve">
    <value>Subject cannot be empty.</value>
  </data>
  <data name="establish_connection" xml:space="preserve">
    <value>Establishing connection to database.....</value>
  </data>
  <data name="establish_connection_finish" xml:space="preserve">
    <value>Connection to database established.</value>
  </data>
  <data name="exit_role" xml:space="preserve">
    <value>Exiting (exit the program)</value>
  </data>
  <data name="fetch_database" xml:space="preserve">
    <value>Fetching agenda database.....</value>
  </data>
  <data name="help_role" xml:space="preserve">
    <value>Summon Help (not finished yet)</value>
  </data>
  <data name="invalid_date_error" xml:space="preserve">
    <value>Date entered does not translate to a valid day.</value>
  </data>
  <data name="invalid_role_error" xml:space="preserve">
    <value>Invalid role specified.</value>
  </data>
  <data name="library" xml:space="preserve">
    <value>library</value>
  </data>
  <data name="main_dev" xml:space="preserve">
    <value>Main developer</value>
  </data>
  <data name="notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="pruned" xml:space="preserve">
    <value>Pruned</value>
  </data>
  <data name="pruner_role" xml:space="preserve">
    <value>Pruner (pruning old out-of-date agendas from database)</value>
  </data>
  <data name="pruning" xml:space="preserve">
    <value>Pruning</value>
  </data>
  <data name="receiver_role" xml:space="preserve">
    <value>Receiver (receiving upcoming agendas from database)</value>
  </data>
  <data name="role_selection" xml:space="preserve">
    <value>Role selection</value>
  </data>
  <data name="secret_shell_access" xml:space="preserve">
    <value>You have accessed the secret menu!</value>
  </data>
  <data name="secret_shell_note" xml:space="preserve">
    <value>This is just a shell in testing, type 'exit' to exit the shell.</value>
  </data>
  <data name="setting_role" xml:space="preserve">
    <value>Change settings (not finished yet)</value>
  </data>
  <data name="setup_json" xml:space="preserve">
    <value>Setting up JSON writer.....</value>
  </data>
  <data name="setup_json_finish" xml:space="preserve">
    <value>JSON writer set up.</value>
  </data>
  <data name="specify_password" xml:space="preserve">
    <value>Specify your password</value>
  </data>
  <data name="specify_role" xml:space="preserve">
    <value>Specify your role in the designated number above</value>
  </data>
  <data name="started_up" xml:space="preserve">
    <value>started up in</value>
  </data>
  <data name="subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="testers" xml:space="preserve">
    <value>Testers</value>
  </data>
  <data name="updater_thread" xml:space="preserve">
    <value>Setting up thread for updater download.....</value>
  </data>
  <data name="updater_thread_finish" xml:space="preserve">
    <value>Updater thread set up.</value>
  </data>
  <data name="update_role" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="uploader_role" xml:space="preserve">
    <value>Uploader (uploading agendas to database)</value>
  </data>
  <data name="upload_agenda" xml:space="preserve">
    <value>Uploading agenda to database.....</value>
  </data>
  <data name="upload_agenda_finish" xml:space="preserve">
    <value>Uploaded agenda to database.</value>
  </data>
  <data name="wait_to_start" xml:space="preserve">
    <value>Waiting 3 seconds until starting up.....</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome to Agenda Manager</value>
  </data>
  <data name="work_in_progress" xml:space="preserve">
    <value>This function is still work-in-progress.</value>
  </data>
  <data name="wrong_password" xml:space="preserve">
    <value>Wrong password entered.</value>
  </data>
</root>